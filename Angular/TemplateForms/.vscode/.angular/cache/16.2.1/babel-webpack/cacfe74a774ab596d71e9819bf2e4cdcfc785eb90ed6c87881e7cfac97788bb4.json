{"ast":null,"code":"export class EmpManagementService {\n  constructor() {\n    this.status = false;\n  }\n  //rec:any=null;\n  addEmp(emp, emplist) {\n    for (let rec in emplist) {\n      if (emp.empId == emplist[rec].empId) this.status = true;\n    }\n    if (this.status == true) {\n      window.alert('This employee Id is already existed.Try new one..');\n    } else {\n      this.status = false;\n      emplist.push({\n        empId: emp.empId,\n        firstName: emp.firstName,\n        lastName: emp.lastName,\n        age: emp.age,\n        location: emp.location\n      });\n      alert(\"One Employee\");\n    }\n  }\n  deleteEmp(eId, emplist) {\n    for (let i in emplist) {\n      console.log(emplist[i].empId);\n      if (eId == emplist[i].empId) {\n        emplist.splice(i, 1);\n      }\n    }\n    alert;\n  }\n  updateEmp() {}\n}","map":{"version":3,"names":["EmpManagementService","constructor","status","addEmp","emp","emplist","rec","empId","window","alert","push","firstName","lastName","age","location","deleteEmp","eId","i","console","log","splice","updateEmp"],"sources":["C:\\Kishore\\angularexamples\\structureddata\\src\\app\\EmpManagementService.ts"],"sourcesContent":["export class EmpManagementService{\r\n    status:boolean=false;\r\n    //rec:any=null;\r\n    \r\n    addEmp(emp:any,emplist:any){\r\n        \r\n        for(let rec in emplist){\r\n            if(emp.empId == emplist[rec].empId)\r\n               this.status=true;\r\n        }\r\n        if(this.status==true){\r\n            window.alert('This employee Id is already existed.Try new one..');\r\n        }\r\n        else{\r\n            this.status=false;\r\n        emplist.push({empId:emp.empId,firstName:emp.firstName,lastName:emp.lastName,\r\n            age:emp.age,location:emp.location})\r\n            alert(\"One Employee\");\r\n            \r\n        }\r\n    }\r\n    deleteEmp(eId:any,emplist:any){\r\n        for(let i in emplist){\r\n            console.log(emplist[i].empId);\r\n            if(eId==emplist[i].empId){\r\n                emplist.splice(i,1);\r\n            }\r\n        }alert\r\n    }\r\n    updateEmp(){\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAM,MAAOA,oBAAoB;EAAjCC,YAAA;IACI,KAAAC,MAAM,GAAS,KAAK;EA+BxB;EA9BI;EAEAC,MAAMA,CAACC,GAAO,EAACC,OAAW;IAEtB,KAAI,IAAIC,GAAG,IAAID,OAAO,EAAC;MACnB,IAAGD,GAAG,CAACG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,CAACC,KAAK,EAC/B,IAAI,CAACL,MAAM,GAAC,IAAI;;IAEvB,IAAG,IAAI,CAACA,MAAM,IAAE,IAAI,EAAC;MACjBM,MAAM,CAACC,KAAK,CAAC,mDAAmD,CAAC;KACpE,MACG;MACA,IAAI,CAACP,MAAM,GAAC,KAAK;MACrBG,OAAO,CAACK,IAAI,CAAC;QAACH,KAAK,EAACH,GAAG,CAACG,KAAK;QAACI,SAAS,EAACP,GAAG,CAACO,SAAS;QAACC,QAAQ,EAACR,GAAG,CAACQ,QAAQ;QACvEC,GAAG,EAACT,GAAG,CAACS,GAAG;QAACC,QAAQ,EAACV,GAAG,CAACU;MAAQ,CAAC,CAAC;MACnCL,KAAK,CAAC,cAAc,CAAC;;EAG7B;EACAM,SAASA,CAACC,GAAO,EAACX,OAAW;IACzB,KAAI,IAAIY,CAAC,IAAIZ,OAAO,EAAC;MACjBa,OAAO,CAACC,GAAG,CAACd,OAAO,CAACY,CAAC,CAAC,CAACV,KAAK,CAAC;MAC7B,IAAGS,GAAG,IAAEX,OAAO,CAACY,CAAC,CAAC,CAACV,KAAK,EAAC;QACrBF,OAAO,CAACe,MAAM,CAACH,CAAC,EAAC,CAAC,CAAC;;;IAE1BR,KAAK;EACV;EACAY,SAASA,CAAA,GAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}